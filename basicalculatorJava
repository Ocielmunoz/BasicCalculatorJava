import java.util.HashSet;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
  * @author OcielMunoz
 */
public class OcielJPanelForm extends javax.swing.JFrame {

//declaracion de variables para las operaciones basicas//    
double first, second, result;
char operator = ' ';    
   
    /**
     * Creates new form OcielJPanelForm
     */
    public OcielJPanelForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        screen = new javax.swing.JTextField();
        Button0 = new javax.swing.JButton();
        Button1 = new javax.swing.JButton();
        Button2 = new javax.swing.JButton();
        Button3 = new javax.swing.JButton();
        Button4 = new javax.swing.JButton();
        Button5 = new javax.swing.JButton();
        Button6 = new javax.swing.JButton();
        Button7 = new javax.swing.JButton();
        Button8 = new javax.swing.JButton();
        Button9 = new javax.swing.JButton();
        point = new javax.swing.JButton();
        factorial = new javax.swing.JButton();
        power = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        addition = new javax.swing.JButton();
        subtraction = new javax.swing.JButton();
        sum = new javax.swing.JButton();
        multiplication = new javax.swing.JButton();
        division = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        javax.swing.JLabel title = new javax.swing.JLabel();
        plusminus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        screen.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        screen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        screen.setText("0");

        Button0.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button0.setText("0");
        Button0.setMaximumSize(new java.awt.Dimension(45, 45));
        Button0.setMinimumSize(new java.awt.Dimension(45, 45));
        Button0.setPreferredSize(new java.awt.Dimension(45, 45));
        Button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button0ActionPerformed(evt);
            }
        });

        Button1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button1.setText("1");
        Button1.setMaximumSize(new java.awt.Dimension(45, 45));
        Button1.setMinimumSize(new java.awt.Dimension(45, 45));
        Button1.setPreferredSize(new java.awt.Dimension(45, 45));
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        Button2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button2.setText("2");
        Button2.setMaximumSize(new java.awt.Dimension(45, 45));
        Button2.setMinimumSize(new java.awt.Dimension(45, 45));
        Button2.setPreferredSize(new java.awt.Dimension(45, 45));
        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });

        Button3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button3.setText("3");
        Button3.setMaximumSize(new java.awt.Dimension(45, 45));
        Button3.setMinimumSize(new java.awt.Dimension(45, 45));
        Button3.setPreferredSize(new java.awt.Dimension(45, 45));
        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });

        Button4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button4.setText("4");
        Button4.setMaximumSize(new java.awt.Dimension(45, 45));
        Button4.setMinimumSize(new java.awt.Dimension(45, 45));
        Button4.setPreferredSize(new java.awt.Dimension(45, 45));
        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });

        Button5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button5.setText("5");
        Button5.setMaximumSize(new java.awt.Dimension(45, 45));
        Button5.setMinimumSize(new java.awt.Dimension(45, 45));
        Button5.setPreferredSize(new java.awt.Dimension(45, 45));
        Button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button5ActionPerformed(evt);
            }
        });

        Button6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button6.setText("6");
        Button6.setMaximumSize(new java.awt.Dimension(45, 45));
        Button6.setMinimumSize(new java.awt.Dimension(45, 45));
        Button6.setPreferredSize(new java.awt.Dimension(45, 45));
        Button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button6ActionPerformed(evt);
            }
        });

        Button7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button7.setText("7");
        Button7.setMaximumSize(new java.awt.Dimension(45, 45));
        Button7.setMinimumSize(new java.awt.Dimension(45, 45));
        Button7.setPreferredSize(new java.awt.Dimension(45, 45));
        Button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button7ActionPerformed(evt);
            }
        });

        Button8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button8.setText("8");
        Button8.setMaximumSize(new java.awt.Dimension(45, 45));
        Button8.setMinimumSize(new java.awt.Dimension(45, 45));
        Button8.setPreferredSize(new java.awt.Dimension(45, 45));
        Button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button8ActionPerformed(evt);
            }
        });

        Button9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button9.setText("9");
        Button9.setMaximumSize(new java.awt.Dimension(45, 45));
        Button9.setMinimumSize(new java.awt.Dimension(45, 45));
        Button9.setPreferredSize(new java.awt.Dimension(45, 45));
        Button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button9ActionPerformed(evt);
            }
        });

        point.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        point.setText(".");
        point.setMaximumSize(new java.awt.Dimension(45, 45));
        point.setMinimumSize(new java.awt.Dimension(45, 45));
        point.setPreferredSize(new java.awt.Dimension(45, 45));
        point.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointActionPerformed(evt);
            }
        });

        factorial.setBackground(new java.awt.Color(204, 204, 204));
        factorial.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        factorial.setText("!");
        factorial.setMaximumSize(new java.awt.Dimension(45, 45));
        factorial.setMinimumSize(new java.awt.Dimension(45, 45));
        factorial.setPreferredSize(new java.awt.Dimension(45, 45));
        factorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factorialActionPerformed(evt);
            }
        });

        power.setBackground(new java.awt.Color(204, 204, 204));
        power.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        power.setText("P");
        power.setMaximumSize(new java.awt.Dimension(45, 45));
        power.setMinimumSize(new java.awt.Dimension(45, 45));
        power.setPreferredSize(new java.awt.Dimension(45, 45));
        power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(204, 204, 204));
        clear.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        clear.setText("C");
        clear.setMaximumSize(new java.awt.Dimension(45, 45));
        clear.setMinimumSize(new java.awt.Dimension(45, 45));
        clear.setPreferredSize(new java.awt.Dimension(45, 45));
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        equal.setBackground(new java.awt.Color(204, 204, 204));
        equal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        equal.setText("=");
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        addition.setBackground(new java.awt.Color(204, 204, 204));
        addition.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        addition.setText("+");
        addition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additionActionPerformed(evt);
            }
        });

        subtraction.setBackground(new java.awt.Color(204, 204, 204));
        subtraction.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        subtraction.setText("-");
        subtraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractionActionPerformed(evt);
            }
        });

        sum.setBackground(new java.awt.Color(204, 204, 204));
        sum.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        sum.setText("Σ");
        sum.setMaximumSize(new java.awt.Dimension(45, 45));
        sum.setMinimumSize(new java.awt.Dimension(45, 45));
        sum.setPreferredSize(new java.awt.Dimension(45, 45));
        sum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumActionPerformed(evt);
            }
        });

        multiplication.setBackground(new java.awt.Color(204, 204, 204));
        multiplication.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        multiplication.setText("*");
        multiplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplicationActionPerformed(evt);
            }
        });

        division.setBackground(new java.awt.Color(204, 204, 204));
        division.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        division.setText("÷");
        division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(204, 204, 204));
        delete.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        delete.setText("<=");
        delete.setMaximumSize(new java.awt.Dimension(45, 45));
        delete.setMinimumSize(new java.awt.Dimension(45, 45));
        delete.setPreferredSize(new java.awt.Dimension(45, 45));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 12)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Basic Calculator");

        plusminus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        plusminus.setText("±");
        plusminus.setMaximumSize(new java.awt.Dimension(45, 45));
        plusminus.setMinimumSize(new java.awt.Dimension(45, 45));
        plusminus.setPreferredSize(new java.awt.Dimension(45, 45));
        plusminus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusminusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(power, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(factorial, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addComponent(screen)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Button4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Button7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Button8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(6, 6, 6)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Button9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Button6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Button1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(plusminus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Button0, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                                    .addComponent(Button2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(point, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Button3, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(equal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(multiplication, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addition, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(subtraction, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(division, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(screen, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(power, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(factorial, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Button7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)
                                .addComponent(Button4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Button8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)
                                .addComponent(Button5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(title))
                                    .addComponent(Button9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(6, 6, 6)
                                .addComponent(Button6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Button1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)
                                .addComponent(plusminus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Button2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)
                                .addComponent(Button0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Button3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)
                                .addComponent(point, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(division, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(multiplication, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addition, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subtraction, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>                        

//METHOD TO assign function to buttons
 
private void digit(javax.swing.JButton button) {

    if(screen.getText().equals("0"))                                  // ===> si tengo cero en screen...
            screen.setText(button.getText());                         // ===> put on the screen el texto del botton
    
    else 
            screen.setText(screen.getText()+ button.getText());      //   ===> si ya tengo en la pantalla, agregar el texto a la derecha
    
}    
// Metodo para operaciones    
private void calculate (char op) {
    if(!(op==' '))
        switch(op) {
        
        case '+':
                first = first + Double.parseDouble(screen.getText());
                break;
        case '-':
                first = first - Double.parseDouble(screen.getText());
                break;
        case '*':
                first = first * Double.parseDouble(screen.getText());
                break;        
        case '/':
                first = first / Double.parseDouble(screen.getText());
                break;        
   
                
    }
    else 
        first = Double.parseDouble(screen.getText());
        
    screen.setText("0");  
}   

    private void Button0ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        digit(Button0);
    }                                       
    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        digit(Button1);
    }                                       
    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        digit(Button4);
    }                                       
    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        digit(Button2);
    }                                       
    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        digit(Button3);
    }                                       
    private void Button5ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        digit(Button5);
    }                                       
    private void Button6ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        digit(Button6);
    }                                       
    private void Button7ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        digit(Button7);
    }                                       
    private void Button8ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        digit(Button8);
    }                                       
    private void Button9ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        digit(Button9);
    }                                       
    private void plusminusActionPerformed(java.awt.event.ActionEvent evt) {                                          
        if(screen.getText().equals("0") == false)
        
            if (screen.getText().startsWith("-"))
                screen.setText(screen.getText().substring(1)); 
                                
            else 
                screen.setText("-" + screen.getText());      
    }                                         
    private void clearActionPerformed(java.awt.event.ActionEvent evt) {                                      
        screen.setText("0");
        
        
    }                                     
    private void pointActionPerformed(java.awt.event.ActionEvent evt) {                                      
        if(!screen.getText().contains("."))
          digit(point);
        
        if(screen.getText().equals("."))
            screen.setText("0.");
       
    }                                     
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {                                       
            if (!screen.getText().equals("0")) 
                screen.setText(screen.getText().substring(0, screen.getText().length()-1));
            if(screen.getText().equals("")|| screen.getText().equals("0.") || screen.getText().equals("-0.") || screen.getText().equals("-0") || screen.getText().equals("-"))
                screen.setText("0");
                            
    }                                      
    private void additionActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
    calculate(operator);    
    
    operator = '+';                                  //save operator
    
    screen.setText("0");       
    }                                        
 
    private void equalActionPerformed(java.awt.event.ActionEvent evt) {                                      
    
    second = Double.parseDouble(screen.getText());
    switch(operator){
        case '+':
            result = first + second; 
            break;
        case '-':
            result = first - second; 
            break;    
        case '*':
            result = first * second; 
            break; 
        case '/':
            result = first / second; 
            break; 
        case '^':
            result = 1;
            
            if(second >= 0)
                for (int i = 1; i<=second; i++)
                result *= first;
            else
                for (int i = 1; i<=-second; i++)
                result /= first;   // result = result / first     
            break;    
            
        default:
        break;      }
    
    screen.setText("" + result);    
    if(screen.getText().endsWith(".0")) 
           screen.setText(screen.getText().substring(0, screen.getText().length()-2));
   
    //screen.setText(String.format("%.0f", result));  //Shows the result (lo aproxima a entero)
            
    operator = ' ';
    
    }                                     
    
    private void subtractionActionPerformed(java.awt.event.ActionEvent evt) {                                            
        
calculate(operator); 
//first = Double.parseDouble(screen.getText());     // convertimos el primer digito en double    
        operator = '-';                                  //save operator
        screen.setText("0");
    }                                           

    private void multiplicationActionPerformed(java.awt.event.ActionEvent evt) {                                               
        calculate(operator); 
        //first = Double.parseDouble(screen.getText());     // convertimos el primer digito en double    
        operator = '*';                                  //save operator
        screen.setText("0");
    }                                              

    private void divisionActionPerformed(java.awt.event.ActionEvent evt) {                                         
        calculate(operator); 
        //first = Double.parseDouble(screen.getText());     // convertimos el primer digito en double    
        operator = '/';                                  //save operator
        screen.setText("0");
    }                                        

    private void factorialActionPerformed(java.awt.event.ActionEvent evt) {                                          


           int n = Integer.parseInt(screen.getText());  //convirtiendo a INT lo q capta del screen
           
           if (n<0)
              screen.setText("ERROR"); 
           
           else
              {
              int fact =1;
              for(int i=1;i<=n; i++)
              fact = fact*i;
              screen.setText(""+ fact);
           }
    }                                         

    private void sumActionPerformed(java.awt.event.ActionEvent evt) {                                    
        
          
        
        int n = Integer.parseInt(screen.getText());     //convirtiendo a INT lo q capta del screen
        int sum;   
           if (n>=0)
              {
              sum =0;
              for(int i=1;i<=n; i++)
              sum = sum+i;
              screen.setText(""+ sum);
           }
           
           else
              {
              sum =0;
              for(int i=1; i<=-n; i++)
              sum = sum + i;
              screen.setText("-"+sum);
           }

    }                                   

    private void powerActionPerformed(java.awt.event.ActionEvent evt) {                                      

       first =  Integer.parseInt(screen.getText());
       screen.setText("0");
       
       operator = '^';
       screen.setText("0");
      
    }                                     
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OcielJPanelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OcielJPanelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OcielJPanelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OcielJPanelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OcielJPanelForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton Button0;
    private javax.swing.JButton Button1;
    private javax.swing.JButton Button2;
    private javax.swing.JButton Button3;
    private javax.swing.JButton Button4;
    private javax.swing.JButton Button5;
    private javax.swing.JButton Button6;
    private javax.swing.JButton Button7;
    private javax.swing.JButton Button8;
    private javax.swing.JButton Button9;
    private javax.swing.JButton addition;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JButton division;
    private javax.swing.JButton equal;
    private javax.swing.JButton factorial;
    private javax.swing.JButton multiplication;
    private javax.swing.JButton plusminus;
    private javax.swing.JButton point;
    private javax.swing.JButton power;
    private javax.swing.JTextField screen;
    private javax.swing.JButton subtraction;
    private javax.swing.JButton sum;
    // End of variables declaration                   
}
